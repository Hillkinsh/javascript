1. seo 通常这需要页面内容在页面加载完成时便已经存在

2.首屏渲染和性能需求，把渲染工作交给服务器

3. 

生命周期不同：
在CSR和SSR中生命周期钩子是不同的. SSR中只有beforeCreate和created会被执行. 
而在CSR中所有周期都会再执行一遍. 
另外需要注意的是, 在服务端代码中不要写有全局副作用的代码, 
例如写了 setInterval而不清除它. 因为在SSR周期没有beforeDestory阶段, 
所以以往CSR中销毁页面前清除副作用的方法就没法继续使用了, 
而此时的setInterval就会被永远不会清除了!

解决方法：
在beforeCreate，created生命周期以及全局的执行环境中调用特定的api前需要判断执行环境。在monunted中有window

 Node.js端是没有浏览器对象的, 所以window, document, DOM操作都没法执行. 
 同理, 浏览器端是没有process对象的. 
 他们各自的API实现也有差别, 这点需要特别留意. 
 比较麻烦的就是第三方库的引入, 有时候你并不知道引入的库能不能完全运行在Node端/浏览器端. 
 如果它只能运行在纯浏览器环境, 那可以在created阶段之后引入和执行来避开Node.js下执行.